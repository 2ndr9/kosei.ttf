{"version":3,"sources":["Loading.tsx","canvas.tsx","view.tsx","FontFace.tsx","Header.tsx","index.tsx"],"names":["StyledDiv","styled","div","StyledDiv2","StyledText","text","StyledP","Loading","props","isLoading","type","color","height","width","PureCanvas","React","forwardRef","ref","canvasRef","mouseX","mouseY","getContext","current","useState","base64Data","setbase64Data","fontName","setFontName","setIsLoading","DrawEnd","e","canvas","toDataURL","Draw","x","y","ctx","beginPath","globalAlpha","moveTo","lineTo","lineCap","lineWidth","strokeStyle","stroke","style","marginLeft","marginRight","id","onMouseDown","button","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseMove","buttons","onMouseUp","onMouseOut","border","display","justifyContent","marginTop","onClick","clearRect","window","innerWidth","marginBottom","onSubmit","event","preventDefault","axios","post","base64","String","replace","font_name","then","res","console","log","location","href","required","maxLength","value","onChange","target","margin","Canvas","useRef","useEffect","handleResize","innerHeight","addEventListener","removeEventListener","TextArea","textarea","View","className","placeholder","FontFace","createGlobalStyle","Date","getTime","Title","p","BackGround","CaptionBackground","Caption","Header","isChrome","isMobile","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b352c377.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport ReactLoading from \"react-loading\";\n\nconst StyledDiv = styled.div`\n  position: fixed;\n  background: rgba(100, 100, 100, 0.8);\n  inset: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\n// margin-left: 40%;\nconst StyledDiv2 = styled.div`\n  margin-top: 20%;\n  margin-left: 40%;\n  width: 100%;\n`;\n\nconst StyledText = styled.text`\n  color: rgba(250, 250, 250, 1);\n  font-size: 27px;\n  text-align: center;\n  font-family: tsuno;\n`;\n\nconst StyledP = styled.text`\n  line-height: 2.5em;\n`;\n\nconst Loading = (props: any) => {\n  const isLoading = props.isLoading;\n\n  if (isLoading) {\n    return (\n      <StyledDiv>\n        <StyledDiv2>\n          <ReactLoading\n            type={\"bars\"}\n            color={\"white\"}\n            height={\"20%\"}\n            width={\"20%\"}\n          />\n        </StyledDiv2>\n        <StyledText>\n          <StyledP>Now Uploading...</StyledP>\n          <br />\n          <StyledP>アップロード中です</StyledP>\n          <br />\n          <StyledP>すこしお待ち下さい</StyledP>\n        </StyledText>\n      </StyledDiv>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default Loading;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\ninterface IRect {\n  width: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\nconst PureCanvas = React.forwardRef((props, ref: any) => {\n  const canvasRef = ref;\n  let mouseX: number | null = null;\n  let mouseY: number | null = null;\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    return canvas.getContext(\"2d\");\n  };\n  const [base64Data, setbase64Data] = useState();\n  const [fontName, setFontName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const OnClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (e.button !== 0) {\n      return;\n    }\n    const canvas: any = canvasRef.current;\n    const rect: IRect = canvas.getBoundingClientRect();\n    const x = ~~(e.clientX - rect.left);\n    const y = ~~(e.clientY - rect.top);\n    Draw(x, y);\n  };\n\n  const OnMove = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (e.buttons !== 1) {\n      return;\n    }\n    const canvas: any = canvasRef.current;\n    const rect: IRect = canvas.getBoundingClientRect();\n    const x = ~~(e.clientX - rect.left);\n    const y = ~~(e.clientY - rect.top);\n    Draw(x, y);\n  };\n\n  const DrawEnd = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas: any = canvasRef.current;\n    mouseX = null;\n    mouseY = null;\n    setbase64Data(canvas.toDataURL(\"image/png\"));\n  };\n\n  const Draw = (x: number, y: number) => {\n    const ctx = getContext();\n    ctx.beginPath();\n    ctx.globalAlpha = 1.0;\n    if (mouseX === null || mouseY === null) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.moveTo(mouseX, mouseY);\n    }\n    ctx.lineTo(x, y);\n    ctx.lineCap = \"square\";\n    ctx.lineWidth = 8;\n    ctx.strokeStyle = \"#000000\";\n    ctx.stroke();\n    mouseX = x;\n    mouseY = y;\n  };\n\n  const Reset = () => {\n    const ctx = getContext();\n    ctx.clearRect(0, 0, window.innerWidth, window.innerWidth);\n\n    const canvas: any = canvasRef.current;\n    setbase64Data(canvas.toDataURL(\"image/png\"));\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    axios\n      .post(\"https://18.180.152.54/\", {\n        base64: String(base64Data).replace(/^.*,/, \"\"),\n        font_name: fontName,\n      })\n      .then((res) => {\n        setIsLoading(false);\n        console.log(res);\n        window.location.href = window.location.href;\n      });\n  };\n\n  return (\n    <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n      <Loading isLoading={isLoading}></Loading>\n      <canvas\n        id=\"canvas\"\n        onMouseDown={OnClick}\n        onMouseMove={OnMove}\n        onMouseUp={DrawEnd}\n        onMouseOut={DrawEnd}\n        ref={canvasRef}\n        style={{\n          border: \"2px solid\",\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          marginTop: \"0\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          width: `428px`,\n        }}\n      >\n        <button\n          onClick={Reset}\n          style={{ marginTop: \"3px\", marginBottom: \"10px\" }}\n        >\n          リセット\n        </button>\n      </div>\n      <form\n        onSubmit={handleSubmit}\n        style={{\n          display: \"flex\",\n          width: \"428px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          // marginTop: \"0\",\n        }}\n      >\n        <p style={{ marginLeft: \"5%\", marginTop: 0 }}>\n          更新する文字:{\" \"}\n          <input\n            type=\"text\"\n            required\n            maxLength={1}\n            value={fontName}\n            onChange={(event) => setFontName(event.target.value)}\n          />\n        </p>\n        <button\n          type=\"submit\"\n          style={{ margin: \"15px\", marginRight: \"5%\", marginTop: \"0\" }}\n        >\n          アップロード\n        </button>\n      </form>\n    </div>\n  );\n});\n\nconst Canvas: React.FC = () => {\n  let canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    const ctx1: any = canvasRef.current!;\n    const ctx = ctx1.getContext(\"2d\");\n\n    const handleResize = () => {\n      ctx.canvas.height =\n        window.innerHeight > window.innerWidth * 2\n          ? window.innerWidth * 0.9\n          : (((window.innerWidth * window.innerHeight) / window.innerWidth) *\n              0.9) /\n            2;\n      ctx.canvas.width =\n        window.innerHeight > window.innerWidth * 2\n          ? window.innerWidth * 0.9\n          : (((window.innerWidth * window.innerHeight) / window.innerWidth) *\n              0.9) /\n            2;\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div style={{ margin: \"0 10%\" }}>\n      <PureCanvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default Canvas;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst TextArea = styled.textarea`\n  font-family: \"tsuno\";\n  width: 100%;\n  height: 100%;\n  font-size: 30px;\n`;\n\nconst View: React.FC = (props) => {\n  return (\n    <section style={{ height: \"100%\", marginRight: \"10%\", marginLeft: \"10%\" }}>\n      <h1 className=\"tsuno\"></h1>\n      <TextArea placeholder=\"自由入力欄\" />\n    </section>\n  );\n};\n\nexport default View;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst FontFace = createGlobalStyle`\n@font-face {\n  font-family: \"tsuno\";\n  src: url(\"https://font-a.s3.ap-northeast-1.amazonaws.com/a.ttf?${new Date().getTime()}\")\n    format(\"opentype\");\n}\n\nbody, select, button{\n  font-family:tsuno\n}\n\ninput{\n  font-family:\"\"\n}\n\n#root{\n  height:\"100%\";\n}\n\n::placeholder{\n  color:silver;\n}\n`;\n\nexport default FontFace;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nconst Title = styled.p`\n  text-align: center;\n  font-size: 27px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst BackGround = styled.div`\n  margin: 0.8em 10% 0.8em 10%;\n  background: -webkit-repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #cde4ff 3px,\n    #cde4ff 7px\n  );\n  background: repeating-linear-gradient(\n    -45deg,\n    #f0f8ff,\n    #f0f8ff 3px,\n    #cde4ff 3px,\n    #cde4ff 7px\n  );\n`;\n\nconst CaptionBackground = styled.div`\n  padding: 0.5em 1em;\n  margin: 0 10% 1em 10%;\n  color: #2c2c2f;\n  background: #cde4ff; /*背景色*/\n  border-radius: 5px;\n`;\n\nconst Caption = styled.p`\n  text-align: center;\n  font-size: 14px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Header: React.FC = (props) => {\n  return (\n    <div>\n      <BackGround>\n        <Title>個性.ttf</Title>\n      </BackGround>\n      <CaptionBackground>\n        <Caption>\n          整った書体、きれいなフォント、読みやすい字。\n          <br />\n          気がついたら世の中はそればかりだ。 スマホ、テレビ、新聞。\n          <br />\n          どこを見ても無駄のない凡庸な字。\n          <br />\n          人の書いた字が見たい。あなたの書いた字で読みたい。\n          <br />\n          あなたの一文字を頂けませんか。\n        </Caption>\n      </CaptionBackground>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Canvas from \"./canvas\";\nimport View from \"./view\";\nimport FontFace from \"./FontFace\";\n\nimport { isChrome, isMobile } from \"react-device-detect\";\nimport Header from \"./Header\";\n\nif (!isChrome || isMobile) {\n  alert(\"PCのGoogle Chromeで開いてください\");\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header></Header>\n    <FontFace></FontFace>\n    <Canvas></Canvas>\n    <View></View>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}